unit VersioningRT.QueryExecutor;

interface

uses
  System.SysUtils, FireDAC.Comp.Client, FireDAC.Stan.Def, FireDAC.Stan.Pool, FireDAC.Stan.Async, FireDAC.Phys.Intf, FireDAC.Phys, FireDAC.Phys.ODBCBase, FireDAC.Phys.MSSQL, FireDAC.VCLUI.Wait, FireDAC.DApt, FireDAC.Stan.Param, FireDAC.DatS, FireDAC.DApt.Intf, FireDAC.Stan.Option, Data.DB;

type
  TQueryExecutor = class
  private
    FConnection: TFDConnection;
    procedure SetupConnection;
  public
    constructor Create;
    destructor Destroy; override;
    procedure ExecuteQuery(AQuery: string);
  end;

implementation

{ TQueryExecutor }

constructor TQueryExecutor.Create;
begin
  inherited Create;
  FConnection := TFDConnection.Create(nil);
  SetupConnection;
end;

destructor TQueryExecutor.Destroy;
begin
  FConnection.Free;
  inherited Destroy;
end;

procedure TQueryExecutor.SetupConnection;
begin
  // Configurazione della connessione al database
  FConnection.DriverName := 'MSSQL'; // Cambiare con il driver appropriato
  FConnection.Params.Database := 'Versioning';
  FConnection.Params.UserName := 'sa';
  FConnection.Params.Password := '1Password1';
  FConnection.Params.Add('Server=CSW325'); // Specificare il server
  FConnection.LoginPrompt := False;
  try
    FConnection.Connected := True;
  except
    on E: Exception do
      raise Exception.Create('Errore di connessione al database: ' + E.Message);
  end;
end;

procedure TQueryExecutor.ExecuteQuery(AQuery: string);
var
  Query: TFDQuery;
begin
  Query := TFDQuery.Create(nil);
  try
    Query.Connection := FConnection;
    Query.SQL.Text := AQuery;
    Query.ExecSQL;
  finally
    Query.Free;
  end;
end;

end.
